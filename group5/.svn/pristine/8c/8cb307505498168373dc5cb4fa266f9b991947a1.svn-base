1.공지
-네이밍: 인터페이스:MemDAO / 구현체:MemDAOImpl
-작업물에 대한 주석 최대한 활용
-log4j2 로컬 경로 수정해주세요~

2.DB SQL문

-- 5조 작업분

create database groupFive;

drop table IF EXISTS Member;
drop table IF EXISTS Ticket;
drop table IF EXISTS Seat;
drop table IF EXISTS Schedule;

Create table Member (
	memberNum int(10) NOT null auto_increment,
	email varchar(50) NOT NULL,
	pwd varchar(20) NOT NULL,
	cfmNum int(10),
 Primary Key (memberNum));


Create table Ticket (
	cfmNum int(10) NOT NULL,
	scheduleNum int(10) NOT NULL,
	seatNum int(10) NOT NULL,
	moviNum int(10) not null,
 Primary Key (cfmNum));


Create table Schedule (
	scheduleNum int(10) NOT NULL,
	viewDate varchar(20) NOT NULL,
	viewTime tinyint(10) not null,
	moviNum int(10) not null,
 Primary Key (scheduleNum));

Create table Seat (
	seatNum int(10) NOT NULL,     
	usable_seat Char(1) NOT NULL DEFAULT "Y",
 Primary Key (seatNum));


-- 이하 참조용 데이터

drop table IF EXISTS Grade;
drop table IF EXISTS Genre;
drop table IF EXISTS Hall;
drop table IF EXISTS Movie;

Create table Movie (
	movie_no Int NOT NULL,
	movie_name Char(20),
	running_time Int,
	grade Char(1) NOT NULL DEFAULT "A",
	director Char(20),
	actor Char(50),
	genre Int NOT NULL,
	description Char(100),
	movie_open Date,
 Primary Key (movie_no));

Create table Schedule (
	schedule_no Int NOT NULL,
	movie_no Int NOT NULL,
	hall_no Int NOT NULL,
	view_date Date,
	view_round Int,
	view_time Date,
 Primary Key (schedule_no));

Create table Hall (
	hall_no Int NOT NULL,
	number_seat Int,
	usable_hall Char(1) NOT NULL DEFAULT "N",
 Primary Key (hall_no));

Create table Genre (
	genre_no Int NOT NULL,
	genre_name Char(20),
 Primary Key (genre_no));

Create table Grade (
	grade_co Char(1) NOT NULL DEFAULT "A",
	grade_type Char(20),
 Primary Key (grade_co));

Create table Pricelist (
	price_no Int NOT NULL,
	price_type Char(20),
	list_price Int,
	discount Int,
 Primary Key (price_no));


-- FK 설정 추후 활용
Alter table Schedule add Index IX_Relationship3 (movie_no);
Alter table Schedule add Foreign Key (movie_no) references Movie (movie_no) on delete  restrict on update  restrict;
Alter table Ticket add Index IX_Relationship5 (schedule_no);
Alter table Ticket add Foreign Key (schedule_no) references Schedule (schedule_no) on delete  restrict on update  restrict;
Alter table Schedule add Index IX_Relationship4 (hall_no);
Alter table Schedule add Foreign Key (hall_no) references Hall (hall_no) on delete  restrict on update  restrict;
Alter table Seat add Index IX_Relationship6 (hall_no);
Alter table Seat add Foreign Key (hall_no) references Hall (hall_no) on delete  restrict on update  restrict;
Alter table Ticket add Index IX_Relationship7 (seat_no,hall_no);
Alter table Ticket add Foreign Key (seat_no,hall_no) references Seat (seat_no,hall_no) on delete  restrict on update  restrict;
Alter table Ticket add Index IX_Relationship8 (payment_no);
Alter table Ticket add Foreign Key (payment_no) references Payment (payment_no) on delete  restrict on update  restrict;
Alter table Movie add Index IX_Relationship1 (genre);
Alter table Movie add Foreign Key (genre) references Genre (genre_no) on delete  restrict on update  restrict;
Alter table Movie add Index IX_Relationship2 (grade);
Alter table Movie add Foreign Key (grade) references Grade (grade_co) on delete  restrict on update  restrict;
Alter table Payment add Index IX_Relationship9 (custom_name,person_no,custom_tel);
Alter table Payment add Foreign Key (custom_name,person_no,custom_tel) references Custom (custom_name,person_no,custom_tel) on delete  restrict on update  restrict;
Alter table Custom add Index IX_Relationship10 (member_id,custom_name,person_no,custom_tel);
Alter table Custom add Foreign Key (member_id,custom_name,person_no,custom_tel) references Member (member_id,custom_name,person_no,custom_tel) on delete  restrict on update  restrict;
